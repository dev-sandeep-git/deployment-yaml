apiVersion: apps/v1
kind: Deployment
metadata: 
  name: my-d
  labels:
    name: label
  namespace: my-space
spec:
  replicas: 3
  selector:
    matchLabels:
      name: label
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: label
    spec:
      containers:
      - name: my-co
        image: tomcat
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "200m"
            memory: "200Mi"
          limits:
            cpu: "300m"
            memory: "300Mi"
        volumeMounts:
        - name: my-volume
          mountPath: /etc/config
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 10
          successThreshold: 1
      volumes:
      - name: my-volume
        configMap:
          name: my-config
---
apiVersion: v1
kind: Service
metadata:
  name: my-sr
  namespace: my-space
spec:
  selector:
    name: label
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
          
          
